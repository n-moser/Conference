/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2013 Nicolas Moser
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

description = 'This project holds the JSF implementations.'

apply from: "$rootDir/config/gradle/arquillian.gradle"

configurations {
    mockito
}

dependencies {
    provided project(':com.prodyna.pac.conference.ejb:com.prodyna.pac.conference.ejb.api')

    provided group: 'org.jboss.spec.javax.servlet', name: 'jboss-servlet-api_3.0_spec', version: servletVersion
    provided group: 'org.jboss.spec.javax.faces', name: 'jboss-jsf-api_2.1_spec', version: jsfVersion
    provided group: 'org.jboss.spec.javax.annotation', name: 'jboss-annotations-api_1.1_spec', version: annotationVersion

    compile group: 'org.richfaces.ui', name: 'richfaces-components-ui', version: richfacesVersion
    compile group: 'org.richfaces.ui', name: 'richfaces-components-ui', version: richfacesVersion
    compile group: 'org.richfaces.core', name: 'richfaces-core-impl', version: richfacesVersion

    testCompile group: 'org.mockito', name:'mockito-all', version: mockitoVersion
    mockito group: 'org.mockito', name:'mockito-all', version: mockitoVersion

    testRuntime project(':com.prodyna.pac.conference.ejb:com.prodyna.pac.conference.ejb.api')
}

/**
 * Copy the Mockito Jar to Arquillian Library directory.
 */
task copyMockitoForArquillian(type: Copy) {

    def arquillianLibDir = file("${rootDir}/build/arquillian/lib")
    def arquillianLibDirBuild = file("${buildDir}/arquillian/lib")

    from configurations.mockito.singleFile
    into arquillianLibDir


    from configurations.mockito.singleFile
    into arquillianLibDirBuild

    doFirst {
        logger.info("Copying Mockito " + configurations.mockito.singleFile)
    }
}

test.dependsOn copyMockitoForArquillian

